name: Deploy and Test DotNet project to Azure Function App

on:
  push:
    branches:
      - dev
  workflow_dispatch:

# CONFIGURATION
# For help, go to https://github.com/Azure/Actions
#
# 1. Set up the following secrets in your repository:
#   AZURE_FUNCTIONAPP_PUBLISH_PROFILE
#
# 2. Change these variables for your configuration:
env:
  AZURE_FUNCTIONAPP_NAME: 'WeatherStationSEP4NEW'   # set this to your function app name on Azure
  AZURE_FUNCTIONAPP_PACKAGE_PATH: './weatherstation'       # set this to the path to your function app project, defaults to the repository root
  DOTNET_VERSION: '8.0.x'                   # set this to the dotnet version to use (e.g. '2.1.x', '3.1.x', '5.0.x')

jobs:
    build-test:
        runs-on: windows-latest
        name: Build

        steps:
          - name: Checkout code
            uses: actions/checkout@v3

          - name: Setup .NET
            uses: actions/setup-dotnet@v3
            with:
              dotnet-version: ${{ env.DOTNET_VERSION }}

          - name: Restore dependencies
            run: dotnet restore weatherstation.sln
            working-directory: ./weatherstation

          - name: Build
            run: dotnet build weatherstation.sln --configuration Release --no-restore
            working-directory: ./weatherstation

          - name: Test
            run: dotnet test weatherstation.sln --configuration Release --no-build --verbosity normal
            working-directory: ./weatherstation

    build-and-deploy:
        needs: build-test
        runs-on: windows-latest
        environment: dev
        steps:
        - name: 'Checkout GitHub Action'
          uses: actions/checkout@v3

        - name: Setup DotNet ${{ env.DOTNET_VERSION }} Environment
          uses: actions/setup-dotnet@v3
          with:
            dotnet-version: ${{ env.DOTNET_VERSION }}

        - name: 'Resolve Project Dependencies Using Dotnet'
          shell: pwsh
          run: |
            pushd '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
            dotnet build --configuration Release --output ./output
            popd

        - name: 'Run Azure Functions Action'
          uses: Azure/functions-action@v1
          id: fa
          with:
            app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
            package: '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output'
            publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}

# For more samples to get started with GitHub Action workflows to deploy to Azure, refer to https://github.com/Azure/actions-workflow-samples
